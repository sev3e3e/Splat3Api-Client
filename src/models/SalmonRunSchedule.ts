/* tslint:disable */
/* eslint-disable */
/**
 * Splat3Api
 * このAPIは、Splatoon3の関連データを取得するための非公式APIです。  ## Rate Limit  このAPIには、1分あたり100回のレート制限があります。どのエンドポイントにおいても、以下のようなレスポンスヘッダーが含まれています。  ``` RateLimit-Limit: 100 RateLimit-Remaining: 99 RateLimit-Reset: 589 ```  - `RateLimit-Limit`はレート制限の基準数です。この値を超えると、再度リクエストを送信できるようになるまでブロックされます。 - `RateLimit-Remaining`は残りのリクエスト回数です。 - `RateLimit-Reset`は`RateLimit-Remaining`がリセットされるまでの秒数です。  レート制限はIPごとに行われます。また、すべてのリクエストがカウントの対象であり、どのレスポンスであっても1リクエストとしてカウントされます。  - 404 Not Found - 400 Bad Request - 204 No Content - 200 OK
 *
 * The version of the OpenAPI document: 0.0.20-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SalmonRunSchedule
 */
export interface SalmonRunSchedule {
    /**
     * 
     * @type {Date}
     * @memberof SalmonRunSchedule
     */
    startTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof SalmonRunSchedule
     */
    endTime: Date;
    /**
     * 
     * @type {string}
     * @memberof SalmonRunSchedule
     */
    stage: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof SalmonRunSchedule
     */
    weapons: Array<string> | null;
}

/**
 * Check if a given object implements the SalmonRunSchedule interface.
 */
export function instanceOfSalmonRunSchedule(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "startTime" in value;
    isInstance = isInstance && "endTime" in value;
    isInstance = isInstance && "stage" in value;
    isInstance = isInstance && "weapons" in value;

    return isInstance;
}

export function SalmonRunScheduleFromJSON(json: any): SalmonRunSchedule {
    return SalmonRunScheduleFromJSONTyped(json, false);
}

export function SalmonRunScheduleFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalmonRunSchedule {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startTime': (new Date(json['startTime'])),
        'endTime': (new Date(json['endTime'])),
        'stage': json['stage'],
        'weapons': json['weapons'],
    };
}

export function SalmonRunScheduleToJSON(value?: SalmonRunSchedule | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startTime': (value.startTime.toISOString()),
        'endTime': (value.endTime.toISOString()),
        'stage': value.stage,
        'weapons': value.weapons,
    };
}

