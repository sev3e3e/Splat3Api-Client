/* tslint:disable */
/* eslint-disable */
/**
 * Splat3Api
 * このAPIは、Splatoon3の関連データを取得するための非公式APIです。  ## Rate Limit  このAPIには、1分あたり100回のレート制限があります。どのエンドポイントにおいても、以下のようなレスポンスヘッダーが含まれています。  ``` RateLimit-Limit: 100 RateLimit-Remaining: 99 RateLimit-Reset: 589 ```  - `RateLimit-Limit`はレート制限の基準数です。この値を超えると、再度リクエストを送信できるようになるまでブロックされます。 - `RateLimit-Remaining`は残りのリクエスト回数です。 - `RateLimit-Reset`は`RateLimit-Remaining`がリセットされるまでの秒数です。  レート制限はIPごとに行われます。また、すべてのリクエストがカウントの対象であり、どのレスポンスであっても1リクエストとしてカウントされます。  - 404 Not Found - 400 Bad Request - 204 No Content - 200 OK
 *
 * The version of the OpenAPI document: 0.0.20-alpha
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SalmonRunSchedule } from './SalmonRunSchedule';
import {
    SalmonRunScheduleFromJSON,
    SalmonRunScheduleFromJSONTyped,
    SalmonRunScheduleToJSON,
} from './SalmonRunSchedule';
import type { Schedule } from './Schedule';
import {
    ScheduleFromJSON,
    ScheduleFromJSONTyped,
    ScheduleToJSON,
} from './Schedule';

/**
 * `regular match`, `bankaraMatch Open`, `bankaraMatch Challenge`, `Salmon Run`, `X Battle`のスケジュール。
 * @export
 * @interface AllSchedules
 */
export interface AllSchedules {
    /**
     * 
     * @type {Array<Schedule>}
     * @memberof AllSchedules
     */
    bankaraOpenSchedules: Array<Schedule>;
    /**
     * 
     * @type {Array<Schedule>}
     * @memberof AllSchedules
     */
    bankaraChallengeSchedules: Array<Schedule>;
    /**
     * 
     * @type {Array<Schedule>}
     * @memberof AllSchedules
     */
    regularSchedules: Array<Schedule>;
    /**
     * 
     * @type {Array<SalmonRunSchedule>}
     * @memberof AllSchedules
     */
    salmonRunSchedules: Array<SalmonRunSchedule>;
    /**
     * 
     * @type {Array<Schedule>}
     * @memberof AllSchedules
     */
    xSchedules: Array<Schedule>;
}

/**
 * Check if a given object implements the AllSchedules interface.
 */
export function instanceOfAllSchedules(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "bankaraOpenSchedules" in value;
    isInstance = isInstance && "bankaraChallengeSchedules" in value;
    isInstance = isInstance && "regularSchedules" in value;
    isInstance = isInstance && "salmonRunSchedules" in value;
    isInstance = isInstance && "xSchedules" in value;

    return isInstance;
}

export function AllSchedulesFromJSON(json: any): AllSchedules {
    return AllSchedulesFromJSONTyped(json, false);
}

export function AllSchedulesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllSchedules {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bankaraOpenSchedules': ((json['bankaraOpenSchedules'] as Array<any>).map(ScheduleFromJSON)),
        'bankaraChallengeSchedules': ((json['bankaraChallengeSchedules'] as Array<any>).map(ScheduleFromJSON)),
        'regularSchedules': ((json['regularSchedules'] as Array<any>).map(ScheduleFromJSON)),
        'salmonRunSchedules': ((json['salmonRunSchedules'] as Array<any>).map(SalmonRunScheduleFromJSON)),
        'xSchedules': ((json['xSchedules'] as Array<any>).map(ScheduleFromJSON)),
    };
}

export function AllSchedulesToJSON(value?: AllSchedules | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bankaraOpenSchedules': ((value.bankaraOpenSchedules as Array<any>).map(ScheduleToJSON)),
        'bankaraChallengeSchedules': ((value.bankaraChallengeSchedules as Array<any>).map(ScheduleToJSON)),
        'regularSchedules': ((value.regularSchedules as Array<any>).map(ScheduleToJSON)),
        'salmonRunSchedules': ((value.salmonRunSchedules as Array<any>).map(SalmonRunScheduleToJSON)),
        'xSchedules': ((value.xSchedules as Array<any>).map(ScheduleToJSON)),
    };
}

